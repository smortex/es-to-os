#!/bin/sh
# Reindex indices form an (old) ElasticSearch instance (6.8) to a (recent) OpenSearch one (2.x)

set -e

export TZ=GMT

elasticsearch()
{
  method=$1; shift
  path=$1; shift
  curl --fail -sS -X $method -H 'Accept: application/json' -H 'Content-Type: application/json' "$@" http://localhost:9200/$path
}

opensearch()
{
  method=$1; shift
  path=$1; shift
  curl --fail -sS -X $method -H 'Accept: application/json' -H 'Content-Type: application/json' --insecure -u admin:admin "$@"  https://localhost:9201/$path
}

format_seconds()
{
  echo $1 | awk '{ s = $1 / 1000;  h = s / 3600; m = (s % 3600) / 60 ; s = s % 60 ;  printf "%2d:%02d:%02d\n", h , m, s }'
}

usage()
{
  cat << HELP
usage: $0 [-f]

Available options:
  -f    Force reindexing of all indices (by default current ones are excluded)
HELP
  exit 1
}

skip_indices_matching="-($(date '+%Y.%m.%d')|$(date '+%Y.%m')|$(date '+%Y'))\$"

args=$(getopt 'fh' "$@")
set -- $args
while :; do
	case $1 in
		-f) skip_indices_matching=''; shift;;
		-h) usage;;
		--) shift; break;
	esac
done

es_templates=$(elasticsearch GET _template | jq -r 'keys | join("\n")' | grep -v 'kibana_index_template:.kibana')
os_templates=$(opensearch GET _index_template | jq -r '.index_templates | .[] | .name')

for template in $es_templates; do
  if ! echo "${os_templates}" | grep -q $template; then
    echo "[+] Setup index template $template..."
    opensearch PUT _index_template/$template -d "$(elasticsearch GET _template/$template | jq '.'$template' | {"index_patterns": .index_patterns, "template": { "settings": .settings.index, "mappings": {"properties": .mappings | .[keys[0]] | .properties }}}')" > /dev/null
  fi
done

es_indices=$(elasticsearch GET _cat/indices | jq -r '.[] | .index' | grep -E '^(ogs|\.samplerr)-')
os_indices=$(opensearch GET _cat/indices | jq -r '.[] | .index')

for index in $es_indices; do
  if ! echo "${os_indices}" | grep -q "\\b${index}\\b"; then
    if [ -n "$skip_indices_matching" ] && echo $index | grep -qE -- $skip_indices_matching; then
      echo "[!] Skipping index $index because it can be active (rerun with -f to force reindex)"
      continue
    fi

    printf '[+] Reindexing %s...' $index
    (opensearch POST _reindex -d "
{
  \"source\":{
    \"index\":\"$index\",
    \"remote\":{
      \"host\":\"http://localhost:9200\"
    }
  },
  \"dest\":{
    \"index\":\"$index\"
  }
}") > /tmp/out
    printf '\033[50G%s\n' $(format_seconds $(jq .took /tmp/out))
    if [ $(jq '.failures | length' /tmp/out) -gt 0 ]; then
      echo "[!] Error detected while reindexing $index:"
      jq '.failures' /tmp/out
      exit 1
    fi
  fi
done
